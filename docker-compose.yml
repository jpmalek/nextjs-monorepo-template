services:
  all:
    build:
      context: .
      dockerfile: Dockerfile.dev
      args:
        # These versions should be set in your .env file (e.g., DOCKER_BUILD_NODE_VERSION=22)
        # and reflect the versions specified in package.json (engines.node and packageManager).
        NODE_VERSION: ${DOCKER_BUILD_NODE_VERSION:-22}
        PNPM_VERSION: ${DOCKER_BUILD_PNPM_VERSION:-10.11.1}
    working_dir: /app
    command: sh -c "pnpm build && pnpm dev"
    ports:
      - '3000:3000'
      - '3001:3001'
    environment:
      - NODE_ENV=development
    volumes:
      # Mount the project directory for live code updates
      - .:/app
      # Use anonymous volumes to prevent the host's node_modules from overwriting the container's.
      # This is crucial for pnpm workspaces, as it preserves both the central store in /app/node_modules
      # and the symlinks in the workspace's node_modules directory (e.g., /app/apps/web/node_modules).
      - /app/node_modules
      - /app/apps/web/node_modules
    env_file:
      - .env
      - .env.local
  

#   postgres:
#     image: postgres
#     ports:
#       - '54320:5432'
#     environment:
#       POSTGRES_USER: postgres
#       POSTGRES_DB: seattle_lakes_database # THIS MUST MATCH YOUR DB NAME IN .env
#       POSTGRES_HOST_AUTH_METHOD: trust
#     env_file:
#       - .env
#     volumes:
#       - postgres_data:/var/lib/postgresql/data

volumes:
  postgres_data:
  node_modules:
